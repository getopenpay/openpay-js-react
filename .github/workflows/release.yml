name: 'Publish stable releases'

on:
  release:
    types: [created]

jobs:
  publish-react:
    name: Publish React to NPM
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 22
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: npm ci

      - name: Build and publish React package (alpha)
        if: 'github.event.release.prerelease'
        working-directory: ./packages/react
        run: |
          RELEASE_VERSION=${{ github.ref_name }}
          npm run build:alpha
          echo "Tag name from github.ref_name: ${{  github.ref_name }}"
          npm version $RELEASE_VERSION --no-git-tag-version
          npm publish --tag alpha --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - name: Build and publish React package (stable)
        if: '!github.event.release.prerelease'
        working-directory: ./packages/react
        run: |
          npm run build
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

  publish-vanilla:
    name: Publish Vanilla to NPM
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 22
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: npm ci

      - name: Build and publish Vanilla package (alpha)
        if: 'github.event.release.prerelease'
        working-directory: ./packages/vanilla
        run: |
          echo "Skipping for testing purposes"
        # run: |
        #   npm run build:alpha
        #   npm version ${{ github.ref_name }} --no-git-tag-version
        #   npm publish --tag alpha --access public
        # env:
        #   NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - name: Build and publish Vanilla package (stable)
        if: '!github.event.release.prerelease'
        working-directory: ./packages/vanilla
        run: |
          echo "Skipping for testing purposes"
        # run: |
        #   RELEASE_VERSION=$(npm view ./ version)
        #   npm run build
        #   npm publish --access public
        # env:
        #   NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
