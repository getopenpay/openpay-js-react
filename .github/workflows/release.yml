name: 'Publish stable releases'

on:
  release:
    types: [created]

jobs:
  publish-packages:
    name: Publish React to NPM
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 22
          registry-url: https://registry.npmjs.org/

      - name: Build packages
        run: |
          npm ci
          npm run build

      - name: Build and publish React package (alpha)
        if: 'github.event.release.prerelease'
        working-directory: ./packages/react
        run: |
          RELEASE_VERSION=${{ github.ref_name }}
          echo "Tag name from github.ref_name: ${{  github.ref_name }}"
          echo "RELEASE_VERSION: $RELEASE_VERSION"
        # npm version $RELEASE_VERSION --no-git-tag-version
        # npm publish --tag alpha --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - name: Build and publish React package (stable)
        if: '!github.event.release.prerelease'
        working-directory: ./packages/react
        run: |
          RELEASE_VERSION=$(npm view ./ version)
          echo "RELEASE_VERSION: $RELEASE_VERSION"
        # npm run build
        # npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - name: Publish Vanilla package (alpha)
        if: 'github.event.release.prerelease'
        working-directory: ./packages/vanilla
        run: |
          RELEASE_VERSION=${{ github.ref_name }}
          echo "Tag name from github.ref_name: ${{  github.ref_name }}"
          echo "RELEASE_VERSION: $RELEASE_VERSION"

      - name: Publish Vanilla package (stable)
        if: '!github.event.release.prerelease'
        working-directory: ./packages/vanilla
        run: |
          RELEASE_VERSION=$(npm view ./ version)
          echo "RELEASE_VERSION: $RELEASE_VERSION"
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
